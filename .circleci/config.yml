version: 2
references:
  ## Workspaces
  workspace: &workspace
    ~/src

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  ## Cache
  gradle_key: &gradle_key
    jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "buildSrc/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/WeatherProject.kt" }}

  gems_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  ## Keys
  decode_android_secret: &decode_android_secret
    run:
      name: Decode Android Secret
      command: echo $SECRET_PROPERTIES | base64 -di | tee secret.properties >/dev/null

  decode_android_key: &decode_android_key
    run:
      name: Decode Android key store
      command: echo $KEYSTORE | base64 -di | tee keystore >/dev/null

  create_google_play_key: &create_google_play_key
    run:
      name: Create Play Console key
      command: echo $PLAY_CONSOLE_KEY | base64 -di | tee play_console_key.json >/dev/null

jobs:
  ## Run unit tests
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *decode_android_secret
      - *decode_android_key
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Run unit tests
          command: bundle exec fastlane test
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_test_results:
          path: app/build/test-results/
          destination: /test-results/

  ## Deploy to Play Store Alpha
  deploy_beta:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *decode_android_secret
      - *decode_android_key
      - *create_google_play_key
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Deploy to Play Store Alpha
          command: bundle exec fastlane beta

  ## Deploy to Play Store
  deploy_production:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *decode_android_secret
      - *decode_android_key
      - *create_google_play_key
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Deploy to Play Store
          command: bundle exec fastlane deploy

workflows:
  version: 2
  workflow:
    jobs:
      - test_unit
      - deploy_beta:
          filters:
            branches:
              only:
                - release
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+-(alpha|beta)[0-9]+$/
          requires:
            - test_unit
      - deploy_production:
          filters:
            branches:
              only:
                - master
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
          requires:
            - test_unit
